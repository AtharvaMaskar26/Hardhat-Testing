1. Initialize a package.json file 
- npm init -y

2. Insalling Hardhat
- npm install --save-dev hardhat

3. Initializing hardhat in your project
- npx hardhat - Creates hardhat.config.j file

4. Making folders - contracts, scripts, test

5. installing libraries and frameworks
- npm install --save-dev @nomiclabs/hardhat-ethers ethers @nomiclabs/hardhat-waffle ethereum-waffle chai

6. Importing hardhat waffle in hardhat.config.js in the first line
- require("@nocmiclabs/hardhat-waffle")

*** Installation Done ***

7. Create a smart contract you want to test

8. To compile a smart contract
- cd contract (go to contract folder)
- npx hardhat compile

** Here I got an error -  Cannot find module '@nocmiclabs/hardhat-waffle ** 
- Reason: Got the spelling wrong (Silly)

*** Testing starts here ***

9. Create a tokenTest file in tests folder and write the following line on the top
- const {expect} = require("chai");

10. running test - npx hardhat test

*** Debuggin in hardhat *** 
11. import "hardhat/console.sol" - Using this we can use console.log just like javascript
- Make sure you write somethhing like *** before your test cases so you can identify between normal sentenses and debugging 

I got this error: Error HH412: Invalid import hardhat/console.sol from contracts/Token.sol. Trying to import file using the own package's name.
Solution - Change the path to -> ../node_modules/hardhat/console.sol


*** Deployment in Hardhat to a test network online ***
12. In scripts folder create a deploy.js file

13. First create an async main function, and then call it with error handling 
main = async () => {
    // 1. Getting object
    const [deployer] = await ethers.getSigners();

    // 2. Creating an instance 
    const Token = await ethers.getContractFactory("Token");

    // 3. Deploying 
    const hardhatToken = await Token.deploy();

    // Printing address
    console.log("Token Address: ", hardhatToken.address);
}

main()
.then(() => process.exit(0))
.catch((error) => {
    console.log(error);
    process.exit(1);
});

14. Then go to hardhat.config.js file and create a variable to add ALCHEMY_API_KEY and private key 

15. Then add network details
    -   networks: {
    sepolia: {
      url: `https://eth-sepolia.g.alchemy.com/v2/${ALCHEMY_API_KEY}`, 
      accounts: [`${PRIVATE_KEY}`]
    }
  }

16, To deploy it to the test net do the following 
npx hardhat run scripts/deploy.js --network sepolia (or your network name)